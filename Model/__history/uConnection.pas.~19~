unit uConnection;

interface

uses
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client, Vcl.Dialogs, Vcl.Forms;

Type
  TConnection = class(TInterfacedObject)
  private
    FConexao, FConexaoDFe: TFDConnection;
    function ReturnPathDataBase: string;
    function ReturnPathDataBaseDFe: string;
    function Directory: string;

    class var FObjetoConexao: TConnection;
    class function GetObjetoConexao: TConnection; static;

  public
    constructor Create;
    destructor Destroy; override;
    function ConnectionMC: TFDConnection;
    function ConnectionDFe: TFDConnection;
    class procedure ReleaseMe;

    class property ObjetoConexao: TConnection read GetObjetoConexao write FObjetoConexao;

  end;

implementation

uses
  System.SysUtils;

{ TConnection }

function TConnection.ConnectionDFe: TFDConnection;
begin
  Result := FConexaoDFe;
end;

function TConnection.ConnectionMC: TFDConnection;
begin
  Result := FConexao;
end;

constructor TConnection.Create;
begin
  FConexao := TFDConnection.Create(nil);
  FConexao.Params.DriverID := 'FB';
  FConexao.Params.Database := ReturnPathDataBase;
  FConexao.Params.UserName := 'SYSDBA';
  FConexao.Params.Password := 'masterkey';
  FConexao.Connected := true;

  FConexaoDFe := TFDConnection.Create(nil);
  FConexaoDFe.Params.DriverID := 'FB';
  FConexaoDFe.Params.Database := ReturnPathDataBaseDFe;
  FConexaoDFe.Params.UserName := 'SYSDBA';
  FConexaoDFe.Params.Password := 'masterkey';
  FConexaoDFe.Connected := true;
  // showmessage('Banco conectou!.');
end;

destructor TConnection.Destroy;
begin
  FreeAndNil(FConexao);
  FreeAndNil(FConexaoDFe);
  inherited;
end;

function TConnection.ReturnPathDataBase: string;
var
  lFile: TextFile;
  lHost: string;
  lLocal: string;
  lLocal2: String;
  lPath, lTipo: string;
  lFile_INI: string;

begin

  lFile_INI := Directory + 'McBancoFB.ini';

  if FileExists(lFile_INI) then
  begin
    AssignFile(lFile, lFile_INI);
    Reset(lFile);
    Readln(lFile, lHost);
    Readln(lFile, lLocal);
    Readln(lFile, lTipo);
    lHost := trim(Copy(lHost, 6, 100));
    lLocal := trim(Copy(lLocal, 7, 150));
    lTipo := trim(Copy(lTipo, 6, 15));

    CloseFile(lFile);
    lPath := lHost + ':' + lLocal; // ShowMessage(cCaminho);
    Result := lPath;
  end;
end;

function TConnection.ReturnPathDataBaseDFe: string;
var
  sArquivo: TextFile;
  lHost: string;
  lLocal: string;
  lLocal2: String;
  lPath, lType: string;
  lFile_INI: string;
  chora, cdata: string;
  lInteiro: Integer;

begin

  lFile_INI := Directory + 'McBancoFB.ini';

  if FileExists(lFile_INI) then
  begin
    AssignFile(sArquivo, lFile_INI);
    Reset(sArquivo);
    Readln(sArquivo, lHost);
    Readln(sArquivo, lLocal);
    Readln(sArquivo, lType);
    lHost := trim(Copy(lHost, 6, 100));
    lLocal := trim(Copy(lLocal, 7, 150));
    lType := trim(Copy(lType, 6, 15));

    CloseFile(sArquivo);

    lInteiro := POS('MCSISTEMASFB', lLocal);
    if lInteiro = 0 then
    begin
      lPath := StringReplace(lLocal, 'MCEMPRESAFB.FDB', 'MCDFEFB.FDB', [rfReplaceAll])
    end
    else
    begin
      lPath := StringReplace(lLocal, 'MCSISTEMASFB.FDB', 'MCDFEFB.FDB', [rfReplaceAll]);
    end;

    lPath := lHost + ':' + lPath; // ShowMessage(lCaminho);
    Result := lPath;
  end;
end;

function TConnection.Directory: string;
var
  cDir: string;
begin
  cDir := ExtractFilePath(Application.exeName);
  if Copy(cDir, Length(cDir), 1) <> '\' then
    cDir := cDir + '\';
  Result := cDir;
end;

class function TConnection.GetObjetoConexao: TConnection;
begin
  if NOT Assigned(FObjetoConexao) then
  begin
    FObjetoConexao := TConnection.Create;
  end;

  Result := FObjetoConexao;
end;

class procedure TConnection.ReleaseMe;
begin
  if Assigned(FObjetoConexao) then
  begin
    FreeAndNil(FObjetoConexao);
  end;
end;

initialization

finalization

TConnection.ReleaseMe;

end.
